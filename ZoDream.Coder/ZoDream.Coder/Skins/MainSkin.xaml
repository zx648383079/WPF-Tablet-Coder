<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
                    xmlns:converter="clr-namespace:ZoDream.Coder.Converter">
    <RoutedUICommand x:Key="Copy">
        input:ApplicationCommands.Copy
    </RoutedUICommand>
    <RoutedUICommand x:Key="Cut">
        input:ApplicationCommands.Cut
    </RoutedUICommand>
    <RoutedUICommand x:Key="Paste">
        input:ApplicationCommands.Paste
    </RoutedUICommand>
    <RoutedUICommand x:Key="Undo">
        input:ApplicationCommands.Undo
    </RoutedUICommand>
    <RoutedUICommand x:Key="Redo">
        input:ApplicationCommands.Redo
    </RoutedUICommand>
    
    <converter:WrapConverter x:Key="WrapConverter"/>

    <Style TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="PanningMode" Value="HorizontalOnly"/>
    </Style>

    <Style TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="40"/>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="SelectedIndex" Value="0"/>
        <Setter Property="FontSize" Value="30"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontSize" Value="30"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" CornerRadius="4" Background="#A5181818"  BorderThickness="2">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#BABABA" />
                        </Border.BorderBrush>
                        <ItemsPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0020000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3450000" Value="180"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0020000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3450000" Value="180"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Margin="1" MinWidth="80" CornerRadius="5">
                        <Border.Background>
                            <SolidColorBrush x:Name="MyAnimatedBrushBackground" Color="Transparent" />
                        </Border.Background>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="MenuIcon" Text="{TemplateBinding Icon}" VerticalAlignment="Center" Padding="5" FontFamily="Segoe MDL2 Assets" FontSize="30"/>
                            <TextBlock Text="{TemplateBinding Header}" HorizontalAlignment="Center" Grid.Column="1" FontSize="30"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="MenuIcon" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" TargetName="MenuIcon" Value="#ff0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                            <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                            <LinearColorKeyFrame Value="#7E9C9C9C" KeyTime="00:00:00.0320000" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="00:00:00.05" To="Red" Storyboard.TargetName="MenuIcon" Storyboard.TargetProperty="Foreground.Color">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                            <LinearColorKeyFrame Value="#7E9C9C9C" KeyTime="00:00:00.0020000" />
                                            <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0320000" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="00:00:00.05" To="Black" Storyboard.TargetName="MenuIcon" Storyboard.TargetProperty="Foreground.Color">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>